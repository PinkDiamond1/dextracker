---

- name: Ensure keys folder exists locally
  file: path=keys state=directory
  connection: local
  run_once: true
  become: no

- name: Create dexd user
  user: name=dexd home=/home/dexd shell=/bin/bash

- name: Copy binary
  copy:
    src: "{{BINARY}}"
    dest: /usr/bin
    mode: 0755

- name: Copy service file
  copy: src=dexd.service dest=/etc/systemd/system/dexd.service mode=0755
  notify: reload systemd

- name: Get node ID
  command: "cat /etc/nodeid"
  changed_when: false
  register: nodeid

- name: dexd init
  command: "/usr/bin/dexd init --chain-id={{TESTNET_NAME}} --name=fullnode{{nodeid.stdout_lines[0]}}"
  become: yes
  become_user: dexd
  register: initresult
  args:
    creates: /home/dexd/.dex/config

- name: Get wallet word seed from result of initial transaction locally
  when: initresult["changed"]
  shell: "echo '{{initresult.stdout}}' | python -c 'import json,sys ; print json.loads(\"\".join(sys.stdin.readlines()))[\"app_message\"][\"secret\"]'"
  changed_when: false
  register: walletkey
  connection: local

- name: Write wallet word seed to local files
  when: initresult["changed"]
  copy: "content={{walletkey.stdout}} dest=keys/node{{nodeid.stdout_lines[0]}}"
  become: no
  connection: local

- name: Copy genesis file
  copy:
    src: "{{GENESISFILE}}"
    dest: /home/dexd/.dex/config/genesis.json
  become: yes
  become_user: dexd

- name: Copy config.toml file
  copy:
    src: "{{CONFIGFILE}}"
    dest: /home/dexd/.dex/config/config.toml
  become: yes
  become_user: dexd

